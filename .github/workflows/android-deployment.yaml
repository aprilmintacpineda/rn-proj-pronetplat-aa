name: android-deployment

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the dev branch
on:
  release:
    types: [published]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    continue-on-error: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@master

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Versions
        run: |
          echo "Yarn: $(yarn --version)"
          echo "Node: $(node --version)"
          echo "Ruby: $(ruby --version)"
          echo "Bundler: $(bundle --version)"

      - name: Install node modules
        run: yarn
      
      - name: Apply patches
        run: yarn patch-package

      - name: Setup files
        run: |
          echo '${{ secrets.ANDROID_GOOGLE_KEYS }}' > android/google-secret-key.json
          echo '${{ secrets.GOOGLE_SERVICE_JSON }}' > android/app/google-services.json
          echo "${{ secrets.ANDROID_SIGNING_KEY }}" > my-upload-key.keystore.asc
          gpg -d --passphrase "${{ secrets.ANDROID_SIGNING_KEY_PASSPHRASE }}" --batch my-upload-key.keystore.asc > android/app/my-upload-key.keystore

      - name: Build and deploy
        run: |
          cp src/env.example.js > src/env.js
          cd android
          bundle exec fastlane android internal
