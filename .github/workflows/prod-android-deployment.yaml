name: prod-android-deployment

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the dev branch
on:
  release:
    types: [released]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    continue-on-error: false
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@master

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Versions
        run: |
          echo "Yarn: $(yarn --version)"
          echo "Node: $(node --version)"
          echo "Ruby: $(ruby --version)"
          echo "Bundler: $(bundle --version)"

      - name: Install node modules
        run: yarn --prefer-offline

      - name: Setup files
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          GOOGLE_API_KEY_ANDROID: ${{ secrets.GOOGLE_API_KEY_ANDROID }}
        run: |
          echo '${{ secrets.SERVICE_ACCOUNT }}' > android/service-account.json
          echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json
          echo "${{ secrets.ANDROID_SIGNING_KEY }}" > my-upload-key.keystore.b64
          base64 -d my-upload-key.keystore.b64 > android/app/my-upload-key.keystore
          cp android/template.gradle.properties android/gradle.properties
          yarn setup-android

      - name: Patch packages
        run: yarn patch-package

      - name: Setup env
        run: |
          cp .env.example .env
          echo 'STAGE=prod' > .env
          echo 'WEBSOCKET_URL=wss://websocket.entrepic.com' > .env
          echo 'API_BASE_URL=https://api.entrepic.com' > .env

      - name: Build and deploy
        run: |
          cd android
          ./gradlew clean
          yarn jetify
          bundle exec fastlane android preprod
